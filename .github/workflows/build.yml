name: Build Web Whisper

on:
  # Disabled for Windows-only GitHub repository  
  # Use GitLab CI/CD for macOS builds and release.yml for Windows
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target universal-apple-darwin'
            name: 'macOS'
            os: 'apple-darwin'
          - platform: 'windows-latest'
            args: '--target x86_64-pc-windows-msvc'
            name: 'Windows'
            os: 'pc-windows-msvc'

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'universal-apple-darwin' || 'x86_64-pc-windows-msvc' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './frontend/src-tauri -> target'

      - name: Install Python (Windows)
        if: matrix.platform == 'windows-latest'
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python dependencies (Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          cd backend
          python -m venv web-whisper
          web-whisper\Scripts\activate.bat
          pip install -r requirements.txt

      - name: Install Python (macOS)
        if: matrix.platform == 'macos-latest'
        run: |
          brew install python@3.11
          cd backend
          python3.11 -m venv web-whisper
          source web-whisper/bin/activate
          pip install -r requirements.txt

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: pnpm install

      - name: Build Tauri app
        working-directory: ./frontend
        run: pnpm tauri build ${{ matrix.args }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-whisper-${{ matrix.name }}-${{ github.ref_name }}
          path: |
            frontend/src-tauri/target/*/release/bundle/
          retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          name: Web Whisper ${{ github.ref_name }}
          body: |
            ## Web Whisper ${{ github.ref_name }}

            Cross-platform speech-to-text application powered by Whisper AI.

            ### Features
            - ðŸš€ Apple Silicon (MLX + Metal GPU) acceleration  
            - ðŸŽ® Windows NVIDIA GPU (CUDA) acceleration
            - ðŸ’¾ Smart text file saving with error recovery
            - ðŸ“± Intuitive drag-and-drop interface
            - ðŸ”§ High-accuracy Whisper Large-v3 model

            ### Downloads
            - **macOS**: Universal Binary (Apple Silicon + Intel)
            - **Windows**: 64-bit MSI installer

            ### Installation
            - **macOS**: Download DMG, drag to Applications folder
            - **Windows**: Download MSI, run installer

          files: |
            artifacts/**/*