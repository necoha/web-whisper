# GitLab CI/CD configuration for Web Whisper Windows build

stages:
  - build
  - test-build
  - package
  - release

variables:
  CARGO_HOME: $CI_PROJECT_DIR/.cargo
  PNPM_CACHE_DIR: $CI_PROJECT_DIR/.pnpm-store
  RUST_BACKTRACE: 1

# Cache configuration
.cache-template: &cache-config
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - .cargo/
      - .pnpm-store/
      - target/
      - frontend/node_modules/


# Build for Windows
build-windows:
  stage: build
  image: mcr.microsoft.com/windows/servercore:ltsc2022
  tags:
    - windows
    - shared
  <<: *cache-config
  before_script:
    # Use PowerShell
    - $ErrorActionPreference = "Stop"
    
    # Install dependencies if not cached
    - |
      if (-not (Get-Command node -ErrorAction SilentlyContinue)) {
        Write-Host "Installing Node.js..."
        Invoke-WebRequest -Uri "https://nodejs.org/dist/v20.17.0/node-v20.17.0-x64.msi" -OutFile "node.msi"
        Start-Process msiexec.exe -Wait -ArgumentList '/i node.msi /quiet'
        Remove-Item node.msi
      }
    
    - |
      if (-not (Get-Command pnpm -ErrorAction SilentlyContinue)) {
        Write-Host "Installing pnpm..."
        npm install -g pnpm
      }
    
    - |
      if (-not (Get-Command rustc -ErrorAction SilentlyContinue)) {
        Write-Host "Installing Rust..."
        Invoke-WebRequest -Uri "https://win.rustup.rs/x86_64" -OutFile "rustup-init.exe"
        .\rustup-init.exe -y --default-toolchain stable
        $env:PATH += ";$env:USERPROFILE\.cargo\bin"
        Remove-Item rustup-init.exe
      }
    
    - rustup target add x86_64-pc-windows-msvc
    - refreshenv
    
  script:
    # Setup Python environment
    - cd backend
    - python -m venv web-whisper
    - web-whisper\Scripts\activate
    - pip install -r requirements.txt
    - cd ..
    
    # Build frontend
    - cd frontend
    - pnpm install --frozen-lockfile
    - pnpm tauri build --target x86_64-pc-windows-msvc
    
  artifacts:
    name: "web-whisper-windows-$CI_COMMIT_SHORT_SHA"
    paths:
      - frontend/src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/
      - frontend/src-tauri/target/x86_64-pc-windows-msvc/release/bundle/nsis/
    expire_in: 1 week
  only:
    - main
    - develop
    - tags


# Package all builds
package:
  stage: package
  image: alpine:latest
  dependencies:
    - build-windows
  before_script:
    - apk add --no-cache zip
  script:
    - mkdir -p releases
    
    # Package Windows
    - if [ -d "frontend/src-tauri/target/x86_64-pc-windows-msvc/release/bundle" ]; then
        cd frontend/src-tauri/target/x86_64-pc-windows-msvc/release/bundle
        zip -r ../../../../../releases/web-whisper-windows-$CI_COMMIT_SHORT_SHA.zip .
        cd ../../../../../
      fi
    
    
  artifacts:
    name: "web-whisper-all-platforms-$CI_COMMIT_SHORT_SHA"
    paths:
      - releases/
    expire_in: 1 month
  only:
    - main
    - develop
    - tags

# Create release for tags
release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  dependencies:
    - package
  script:
    - echo "Creating release for $CI_COMMIT_TAG"
  release:
    tag_name: '$CI_COMMIT_TAG'
    name: 'Web Whisper $CI_COMMIT_TAG'
    description: |
      ## Web Whisper $CI_COMMIT_TAG

      Cross-platform speech-to-text application with Whisper AI.

      ### Downloads
      - **Windows**: 64-bit installer + portable

      ### Features
      - CUDA acceleration for Windows NVIDIA GPUs
      - Simplified drag-and-drop interface
      - Multiple audio format support
      - High-accuracy Whisper Large-v3 model
    assets:
      links:
        - name: 'Windows 64-bit'
          url: '$CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_TAG/download?job=package'
  only:
    - tags